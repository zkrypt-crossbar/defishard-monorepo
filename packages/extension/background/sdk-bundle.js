// DeFiShArd SDK for Browser Extensions

"use strict";var DeFiShArdSDK=(()=>{var te=Object.defineProperty;var Ee=Object.getOwnPropertyDescriptor;var xe=Object.getOwnPropertyNames;var Ke=Object.prototype.hasOwnProperty;var Ce=(s=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(s,{get:(t,e)=>(typeof require<"u"?require:t)[e]}):s)(function(s){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+s+'" is not supported')});var B=(s,t)=>()=>(s&&(t=s(s=0)),t);var D=(s,t)=>{for(var e in t)te(s,e,{get:t[e],enumerable:!0})},Ae=(s,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of xe(t))!Ke.call(s,o)&&o!==e&&te(s,o,{get:()=>t[o],enumerable:!(r=Ee(t,o))||r.enumerable});return s};var z=s=>Ae(te({},"__esModule",{value:!0}),s);var V={};D(V,{KeygenSession:()=>W,Keyshare:()=>K,Message:()=>_,SignSession:()=>j,default:()=>We,initSync:()=>Re});function F(s){let t=a.__externref_table_alloc();return a.__wbindgen_export_2.set(t,s),t}function $(s,t){try{return s.apply(this,t)}catch(e){let r=F(e);a.__wbindgen_exn_store(r)}}function R(){return(N===null||N.byteLength===0)&&(N=new Uint8Array(a.memory.buffer)),N}function L(s,t){return s=s>>>0,ue.decode(R().subarray(s,s+t))}function f(s){return s==null}function ne(s){let t=typeof s;if(t=="number"||t=="boolean"||s==null)return`${s}`;if(t=="string")return`"${s}"`;if(t=="symbol"){let o=s.description;return o==null?"Symbol":`Symbol(${o})`}if(t=="function"){let o=s.name;return typeof o=="string"&&o.length>0?`Function(${o})`:"Function"}if(Array.isArray(s)){let o=s.length,n="[";o>0&&(n+=ne(s[0]));for(let i=1;i<o;i++)n+=", "+ne(s[i]);return n+="]",n}let e=/\[object ([^\]]+)\]/.exec(toString.call(s)),r;if(e&&e.length>1)r=e[1];else return toString.call(s);if(r=="Object")try{return"Object("+JSON.stringify(s)+")"}catch{return"Object"}return s instanceof Error?`${s.name}: ${s.message}
${s.stack}`:r}function de(s,t,e){if(e===void 0){let c=Q.encode(s),g=t(c.length,1)>>>0;return R().subarray(g,g+c.length).set(c),u=c.length,g}let r=s.length,o=t(r,1)>>>0,n=R(),i=0;for(;i<r;i++){let c=s.charCodeAt(i);if(c>127)break;n[o+i]=c}if(i!==r){i!==0&&(s=s.slice(i)),o=e(o,r,r=i+s.length*3,1)>>>0;let c=R().subarray(o+i,o+r),g=$e(s,c);i+=g.written,o=e(o,r,i,1)>>>0}return u=i,o}function H(){return(x===null||x.buffer.detached===!0||x.buffer.detached===void 0&&x.buffer!==a.memory.buffer)&&(x=new DataView(a.memory.buffer)),x}function p(s,t){let e=t(s.length*1,1)>>>0;return R().set(s,e/1),u=s.length,e}function q(s,t){return s=s>>>0,R().subarray(s/1,s/1+t)}function J(s,t){if(!(s instanceof t))throw new Error(`expected instance of ${t.name}`)}function m(s){let t=a.__wbindgen_export_2.get(s);return a.__externref_table_dealloc(s),t}function ie(s,t){let e=t(s.length*4,4)>>>0;for(let r=0;r<s.length;r++){let o=F(s[r]);H().setUint32(e+4*r,o,!0)}return u=s.length,e}function he(s,t){s=s>>>0;let e=H(),r=[];for(let o=s;o<s+4*t;o+=4)r.push(a.__wbindgen_export_2.get(e.getUint32(o,!0)));return a.__externref_drop_slice(s,t),r}async function Fe(s,t){if(typeof Response=="function"&&s instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(s,t)}catch(r){if(s.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}let e=await s.arrayBuffer();return await WebAssembly.instantiate(e,t)}else{let e=await WebAssembly.instantiate(s,t);return e instanceof WebAssembly.Instance?{instance:e,module:s}:e}}function pe(){let s={};return s.wbg={},s.wbg.__wbg_buffer_609cc3eee51ed158=function(t){return t.buffer},s.wbg.__wbg_call_672a4d21634d4a24=function(){return $(function(t,e){return t.call(e)},arguments)},s.wbg.__wbg_call_7cccdd69e0791ae2=function(){return $(function(t,e,r){return t.call(e,r)},arguments)},s.wbg.__wbg_crypto_ed58b8e10a292839=function(t){return t.crypto},s.wbg.__wbg_getRandomValues_bcb4912f16000dc4=function(){return $(function(t,e){t.getRandomValues(e)},arguments)},s.wbg.__wbg_length_a446193dc22c12f8=function(t){return t.length},s.wbg.__wbg_message_new=function(t){return _.__wrap(t)},s.wbg.__wbg_message_unwrap=function(t){return _.__unwrap(t)},s.wbg.__wbg_msCrypto_0a36e2ec3a343d26=function(t){return t.msCrypto},s.wbg.__wbg_new_a12002a7f91c75be=function(t){return new Uint8Array(t)},s.wbg.__wbg_new_c68d7209be747379=function(t,e){return new Error(L(t,e))},s.wbg.__wbg_newnoargs_105ed471475aaf50=function(t,e){return new Function(L(t,e))},s.wbg.__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a=function(t,e,r){return new Uint8Array(t,e>>>0,r>>>0)},s.wbg.__wbg_newwithlength_a381634e90c276d4=function(t){return new Uint8Array(t>>>0)},s.wbg.__wbg_newwithlength_c4c419ef0bc8a1f8=function(t){return new Array(t>>>0)},s.wbg.__wbg_node_02999533c4ea02e3=function(t){return t.node},s.wbg.__wbg_process_5c1d670bc53614b8=function(t){return t.process},s.wbg.__wbg_randomFillSync_ab2cfe79ebbf2740=function(){return $(function(t,e){t.randomFillSync(e)},arguments)},s.wbg.__wbg_require_79b1e9274cde3c87=function(){return $(function(){return module.require},arguments)},s.wbg.__wbg_set_37837023f3d740e8=function(t,e,r){t[e>>>0]=r},s.wbg.__wbg_set_65595bdd868b3009=function(t,e,r){t.set(e,r>>>0)},s.wbg.__wbg_set_bb8cecf6a62b9f46=function(){return $(function(t,e,r){return Reflect.set(t,e,r)},arguments)},s.wbg.__wbg_static_accessor_GLOBAL_88a902d13a557d07=function(){let t=typeof globalThis>"u"?null:globalThis;return f(t)?0:F(t)},s.wbg.__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0=function(){let t=typeof globalThis>"u"?null:globalThis;return f(t)?0:F(t)},s.wbg.__wbg_static_accessor_SELF_37c5d418e4bf5819=function(){let t=typeof self>"u"?null:self;return f(t)?0:F(t)},s.wbg.__wbg_static_accessor_WINDOW_5de37043a91a9c40=function(){let t=typeof window>"u"?null:window;return f(t)?0:F(t)},s.wbg.__wbg_subarray_aa9065fa9dc5df96=function(t,e,r){return t.subarray(e>>>0,r>>>0)},s.wbg.__wbg_versions_c71aa1626a93e0a1=function(t){return t.versions},s.wbg.__wbindgen_debug_string=function(t,e){let r=ne(e),o=de(r,a.__wbindgen_malloc,a.__wbindgen_realloc),n=u;H().setInt32(t+4*1,n,!0),H().setInt32(t+4*0,o,!0)},s.wbg.__wbindgen_init_externref_table=function(){let t=a.__wbindgen_export_2,e=t.grow(4);t.set(0,void 0),t.set(e+0,void 0),t.set(e+1,null),t.set(e+2,!0),t.set(e+3,!1)},s.wbg.__wbindgen_is_function=function(t){return typeof t=="function"},s.wbg.__wbindgen_is_object=function(t){let e=t;return typeof e=="object"&&e!==null},s.wbg.__wbindgen_is_string=function(t){return typeof t=="string"},s.wbg.__wbindgen_is_undefined=function(t){return t===void 0},s.wbg.__wbindgen_memory=function(){return a.memory},s.wbg.__wbindgen_number_new=function(t){return t},s.wbg.__wbindgen_string_new=function(t,e){return L(t,e)},s.wbg.__wbindgen_throw=function(t,e){throw new Error(L(t,e))},s}function fe(s,t){return a=s.exports,ye.__wbindgen_wasm_module=t,x=null,N=null,a.__wbindgen_start(),a}function Re(s){if(a!==void 0)return a;typeof s<"u"&&(Object.getPrototypeOf(s)===Object.prototype?{module:s}=s:console.warn("using deprecated parameters for `initSync()`; pass a single object instead"));let t=pe();s instanceof WebAssembly.Module||(s=new WebAssembly.Module(s));let e=new WebAssembly.Instance(s,t);return fe(e,s)}async function ye(s){if(a!==void 0)return a;typeof s<"u"&&(Object.getPrototypeOf(s)===Object.prototype?{module_or_path:s}=s:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof s>"u"&&(s=new URL("dkls_wasm_ll_bg.wasm",Te.url));let t=pe();(typeof s=="string"||typeof Request=="function"&&s instanceof Request||typeof URL=="function"&&s instanceof URL)&&(s=fetch(s));let{instance:e,module:r}=await Fe(await s,t);return fe(e,r)}var Te,a,ue,N,u,Q,$e,x,re,W,le,K,oe,_,se,j,We,T=B(()=>{"use strict";Te={};ue=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&ue.decode();N=null;u=0,Q=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},$e=typeof Q.encodeInto=="function"?function(s,t){return Q.encodeInto(s,t)}:function(s,t){let e=Q.encode(s);return t.set(e),{read:s.length,written:e.length}};x=null;re=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>a.__wbg_keygensession_free(s>>>0,1)),W=class s{static __wrap(t){t=t>>>0;let e=Object.create(s.prototype);return e.__wbg_ptr=t,re.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,re.unregister(this),t}free(){let t=this.__destroy_into_raw();a.__wbg_keygensession_free(t,0)}constructor(t,e,r,o,n,i){let c=p(o,a.__wbindgen_malloc),g=u;var h=f(n)?0:p(n,a.__wbindgen_malloc),l=u;let d=a.keygensession_new(t,e,r,c,g,h,l,i);return this.__wbg_ptr=d>>>0,re.register(this,this.__wbg_ptr,this),this}toBytes(){let t=a.keygensession_toBytes(this.__wbg_ptr);var e=q(t[0],t[1]).slice();return a.__wbindgen_free(t[0],t[1]*1,1),e}static fromBytes(t){let e=p(t,a.__wbindgen_malloc),r=u,o=a.keygensession_fromBytes(e,r);return s.__wrap(o)}static initKeyRotation(t,e,r){J(t,K);var o=f(e)?0:p(e,a.__wbindgen_malloc),n=u;let i=a.keygensession_initKeyRotation(t.__wbg_ptr,o,n,r);if(i[2])throw m(i[1]);return s.__wrap(i[0])}static initKeyRecovery(t,e,r,o){J(t,K);let n=p(e,a.__wbindgen_malloc),i=u;var c=f(r)?0:p(r,a.__wbindgen_malloc),g=u;let h=a.keygensession_initKeyRecovery(t.__wbg_ptr,n,i,c,g,o);if(h[2])throw m(h[1]);return s.__wrap(h[0])}static initLostShareRecovery(t,e,r,o,n,i,c,g){let h=p(o,a.__wbindgen_malloc),l=u,d=p(n,a.__wbindgen_malloc),A=u,Y=p(i,a.__wbindgen_malloc),Ie=u;var Me=f(c)?0:p(c,a.__wbindgen_malloc),ke=u;let ee=a.keygensession_initLostShareRecovery(t,e,r,h,l,d,A,Y,Ie,Me,ke,g);if(ee[2])throw m(ee[1]);return s.__wrap(ee[0])}error(){return a.keygensession_error(this.__wbg_ptr)}keyshare(){let t=this.__destroy_into_raw(),e=a.keygensession_keyshare(t);if(e[2])throw m(e[1]);return K.__wrap(e[0])}createFirstMessage(){let t=a.keygensession_createFirstMessage(this.__wbg_ptr);if(t[2])throw m(t[1]);return _.__wrap(t[0])}calculateChainCodeCommitment(){let t=a.keygensession_calculateChainCodeCommitment(this.__wbg_ptr);var e=q(t[0],t[1]).slice();return a.__wbindgen_free(t[0],t[1]*1,1),e}handleMessages(t,e){let r=ie(t,a.__wbindgen_malloc),o=u;var n=f(e)?0:p(e,a.__wbindgen_malloc),i=u;let c=a.keygensession_handleMessages(this.__wbg_ptr,r,o,n,i);if(c[3])throw m(c[2]);var g=he(c[0],c[1]).slice();return a.__wbindgen_free(c[0],c[1]*4,4),g}},le=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>a.__wbg_keyshare_free(s>>>0,1)),K=class s{static __wrap(t){t=t>>>0;let e=Object.create(s.prototype);return e.__wbg_ptr=t,le.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,le.unregister(this),t}free(){let t=this.__destroy_into_raw();a.__wbg_keyshare_free(t,0)}static fromBytes(t){let e=p(t,a.__wbindgen_malloc),r=u,o=a.keyshare_fromBytes(e,r);if(o[2])throw m(o[1]);return s.__wrap(o[0])}toBytes(){let t=a.keyshare_toBytes(this.__wbg_ptr);var e=q(t[0],t[1]).slice();return a.__wbindgen_free(t[0],t[1]*1,1),e}get publicKey(){return a.keyshare_publicKey(this.__wbg_ptr)}get participants(){return a.keyshare_participants(this.__wbg_ptr)}get threshold(){return a.keyshare_threshold(this.__wbg_ptr)}get partyId(){return a.keyshare_partyId(this.__wbg_ptr)}finishKeyRotation(t){J(t,s);var e=t.__destroy_into_raw();a.keyshare_finishKeyRotation(this.__wbg_ptr,e)}},oe=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>a.__wbg_message_free(s>>>0,1)),_=class s{static __wrap(t){t=t>>>0;let e=Object.create(s.prototype);return e.__wbg_ptr=t,oe.register(e,e.__wbg_ptr,e),e}static __unwrap(t){return t instanceof s?t.__destroy_into_raw():0}__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,oe.unregister(this),t}free(){let t=this.__destroy_into_raw();a.__wbg_message_free(t,0)}get from_id(){return a.__wbg_get_message_from_id(this.__wbg_ptr)}set from_id(t){a.__wbg_set_message_from_id(this.__wbg_ptr,t)}get to_id(){let t=a.__wbg_get_message_to_id(this.__wbg_ptr);return t===16777215?void 0:t}set to_id(t){a.__wbg_set_message_to_id(this.__wbg_ptr,f(t)?16777215:t)}get payload(){return a.message_payload(this.__wbg_ptr)}constructor(t,e,r){let o=a.message_create(t,e,f(r)?16777215:r);return this.__wbg_ptr=o>>>0,oe.register(this,this.__wbg_ptr,this),this}clone(){let t=a.message_clone(this.__wbg_ptr);return s.__wrap(t)}},se=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>a.__wbg_signsession_free(s>>>0,1)),j=class s{static __wrap(t){t=t>>>0;let e=Object.create(s.prototype);return e.__wbg_ptr=t,se.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){let t=this.__wbg_ptr;return this.__wbg_ptr=0,se.unregister(this),t}free(){let t=this.__destroy_into_raw();a.__wbg_signsession_free(t,0)}constructor(t,e,r){J(t,K);var o=t.__destroy_into_raw();let n=de(e,a.__wbindgen_malloc,a.__wbindgen_realloc),i=u;var c=f(r)?0:p(r,a.__wbindgen_malloc),g=u;let h=a.signsession_new(o,n,i,c,g);return this.__wbg_ptr=h>>>0,se.register(this,this.__wbg_ptr,this),this}toBytes(){let t=a.signsession_toBytes(this.__wbg_ptr);var e=q(t[0],t[1]).slice();return a.__wbindgen_free(t[0],t[1]*1,1),e}static fromBytes(t){let e=p(t,a.__wbindgen_malloc),r=u,o=a.signsession_fromBytes(e,r);return s.__wrap(o)}error(){return a.signsession_error(this.__wbg_ptr)}createFirstMessage(t){let e=p(t,a.__wbindgen_malloc),r=u,o=a.signsession_createFirstMessage(this.__wbg_ptr,e,r);if(o[2])throw m(o[1]);return _.__wrap(o[0])}handleMessages(t,e){let r=ie(t,a.__wbindgen_malloc),o=u;var n=f(e)?0:p(e,a.__wbindgen_malloc),i=u;let c=a.signsession_handleMessages(this.__wbg_ptr,r,o,n,i);if(c[3])throw m(c[2]);var g=he(c[0],c[1]).slice();return a.__wbindgen_free(c[0],c[1]*4,4),g}lastMessage(t){let e=p(t,a.__wbindgen_malloc),r=u,o=a.signsession_lastMessage(this.__wbg_ptr,e,r);if(o[2])throw m(o[1]);return _.__wrap(o[0])}combine(t){let e=this.__destroy_into_raw(),r=ie(t,a.__wbindgen_malloc),o=u,n=a.signsession_combine(e,r,o);if(n[2])throw m(n[1]);return m(n[0])}};We=ye});var b,G=B(()=>{"use strict";b=class{constructor(t="defishard_"){this.prefix=t}async clear(){let t=await this.getKeys();await Promise.all(t.map(e=>this.remove(e)))}getFullKey(t){return`${this.prefix}${t}`}}});var me={};D(me,{WebStorageAdapter:()=>I});var I,ae=B(()=>{"use strict";G();I=class extends b{constructor(t="defishard_"){if(super(t),typeof localStorage>"u")throw new Error("localStorage is not available in this environment")}async get(t){try{return localStorage.getItem(this.getFullKey(t))}catch(e){return console.error("Failed to get from localStorage:",e),null}}async set(t,e){try{localStorage.setItem(this.getFullKey(t),e)}catch(r){throw console.error("Failed to set in localStorage:",r),r}}async remove(t){try{localStorage.removeItem(this.getFullKey(t))}catch(e){throw console.error("Failed to remove from localStorage:",e),e}}async getKeys(){try{return Object.keys(localStorage).filter(e=>e.startsWith(this.prefix)).map(e=>e.substring(this.prefix.length))}catch(t){return console.error("Failed to get keys from localStorage:",t),[]}}}});var _e={};D(_e,{ExtensionStorageAdapter:()=>M});var M,ce=B(()=>{"use strict";G();M=class extends b{constructor(t="defishard_"){if(super(t),typeof chrome>"u"||!chrome.storage||!chrome.storage.local)throw new Error("chrome.storage.local is not available in this environment")}async get(t){try{let e=this.getFullKey(t);return(await chrome.storage.local.get([e]))[e]||null}catch(e){return console.error("Failed to get from chrome.storage.local:",e),null}}async set(t,e){try{let r=this.getFullKey(t);await chrome.storage.local.set({[r]:e})}catch(r){throw console.error("Failed to set in chrome.storage.local:",r),r}}async remove(t){try{let e=this.getFullKey(t);await chrome.storage.local.remove([e])}catch(e){throw console.error("Failed to remove from chrome.storage.local:",e),e}}async getKeys(){try{let t=await chrome.storage.local.get(null);return Object.keys(t).filter(e=>e.startsWith(this.prefix)).map(e=>e.substring(this.prefix.length))}catch(t){return console.error("Failed to get keys from chrome.storage.local:",t),[]}}async clear(){try{let t=await chrome.storage.local.get(null),e=Object.keys(t).filter(r=>r.startsWith(this.prefix));e.length>0&&await chrome.storage.local.remove(e)}catch(t){throw console.error("Failed to clear chrome.storage.local:",t),t}}}});var we={};D(we,{MobileStorageAdapter:()=>E});var k,E,ge=B(()=>{"use strict";G();try{k=Ce("@react-native-async-storage/async-storage").default}catch{}E=class extends b{constructor(t="defishard_"){if(super(t),!k)throw new Error("@react-native-async-storage/async-storage is not available. Please install it for React Native projects.")}async get(t){try{return await k.getItem(this.getFullKey(t))}catch(e){return console.error("Failed to get from AsyncStorage:",e),null}}async set(t,e){try{await k.setItem(this.getFullKey(t),e)}catch(r){throw console.error("Failed to set in AsyncStorage:",r),r}}async remove(t){try{await k.removeItem(this.getFullKey(t))}catch(e){throw console.error("Failed to remove from AsyncStorage:",e),e}}async getKeys(){try{return(await k.getAllKeys()).filter(e=>e.startsWith(this.prefix)).map(e=>e.substring(this.prefix.length))}catch(t){return console.error("Failed to get keys from AsyncStorage:",t),[]}}async clear(){try{let e=(await k.getAllKeys()).filter(r=>r.startsWith(this.prefix));e.length>0&&await k.multiRemove(e)}catch(t){throw console.error("Failed to clear AsyncStorage:",t),t}}}});var Ue={};D(Ue,{ApiClient:()=>S,BaseProcessor:()=>v,DeFiShArdSDK:()=>w,EventEmitter:()=>y,ExtensionStorageAdapter:()=>M,KeygenProcessor:()=>C,MobileStorageAdapter:()=>E,SignProcessor:()=>U,WebSocketManager:()=>P,WebStorageAdapter:()=>I,createExtensionSDK:()=>Pe,createMobileSDK:()=>ve,createStorageAdapter:()=>be,createWebSDK:()=>Se});var y=class{constructor(){this.events=new Map}on(t,e){this.events.has(t)||this.events.set(t,[]),this.events.get(t).push(e)}off(t,e){let r=this.events.get(t);if(r){let o=r.indexOf(e);o>-1&&r.splice(o,1)}}once(t,e){let r=(...o)=>{e(...o),this.off(t,r)};this.on(t,r)}emit(t,...e){let r=this.events.get(t);r&&r.forEach(o=>{try{o(...e)}catch(n){console.error(`Error in event handler for ${t}:`,n)}})}removeAllListeners(t){t?this.events.delete(t):this.events.clear()}listenerCount(t){let e=this.events.get(t);return e?e.length:0}};var S=class{constructor(t){this.relayerUrl=t;this.config={relayerUrl:t,websocketUrl:""}}updateConfig(t){this.config=t}async register(){let t=this.generatePartyId(),e=await fetch(`${this.config.relayerUrl}/party/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({party_id:t})});if(!e.ok){let n=await e.json().catch(()=>({}));throw new Error(`Registration failed: ${e.statusText} - ${n.error||""}`)}let r=await e.json(),o={success:!0,message:r.message||"Registration successful",partyId:r.party_id,token:r.token};return this.config.partyId=o.partyId,this.config.apiKey=o.token,o}async createGroup(t,e,r){if(!this.config.apiKey)throw new Error("API key required for group operations");let o=this.generateGroupId(),n=await fetch(`${this.config.relayerUrl}/group/create`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},body:JSON.stringify({group_id:o,n:e,t,timeout:r})});if(!n.ok){let g=await n.json().catch(()=>({}));throw new Error(`Failed to create group: ${n.statusText} - ${g.error||""}`)}let i=await n.json();return{success:!0,message:i.message||"Group created successfully",group:{groupId:i.group.group_id,totalParties:i.group.n,threshold:i.group.t,timeout:i.group.timeout,createdAt:i.group.created_at,updatedAt:i.group.updated_at,createdBy:{id:i.group.created_by.id,partyId:i.group.created_by.party_id,token:i.group.created_by.token,createdAt:i.group.created_by.created_at},members:i.group.members.map(g=>({partyId:g.party_id,index:g.index||0})),status:i.group.status}}}async joinGroup(t){if(!this.config.apiKey)throw new Error("API key required for group operations");let e=await fetch(`${this.config.relayerUrl}/group/join`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},body:JSON.stringify({group_id:t})});if(!e.ok){let i=await e.json().catch(()=>({}));throw new Error(`Failed to join group: ${e.statusText} - ${i.error||""}`)}let r=await e.json(),o=await this.getGroupInfo(t);return{success:!0,message:r.message||"Joined group successfully",group:o}}async getGroupInfo(t){if(!this.config.apiKey)throw new Error("API key required for group operations");let e=await fetch(`${this.config.relayerUrl}/group/info`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},body:JSON.stringify({group_id:t})});if(!e.ok){let n=await e.json().catch(()=>({}));throw new Error(`Failed to get group info: ${e.statusText} - ${n.error||""}`)}let r=await e.json();return{groupId:r.group_id,totalParties:r.n,threshold:r.t,timeout:r.timeout,createdAt:r.created_at,updatedAt:r.updated_at,createdBy:{id:r.created_by.id,partyId:r.created_by.party_id,token:r.created_by.token,createdAt:r.created_by.created_at},members:r.members.map((n,i)=>({partyId:n.party_id,index:i})),status:r.status}}async getPartyInfo(){if(!this.config.apiKey)throw new Error("API key required for party operations");let t=await fetch(`${this.config.relayerUrl}/party/info`,{method:"GET",headers:{Authorization:`Bearer ${this.config.apiKey}`}});if(!t.ok){let e=await t.json().catch(()=>({}));throw new Error(`Failed to get party info: ${t.statusText} - ${e.error||""}`)}return t.json()}generatePartyId(){let t=new Uint8Array(33);return crypto.getRandomValues(t),t[0]=t[1]%2===0?2:3,Array.from(t,e=>e.toString(16).padStart(2,"0")).join("")}generateGroupId(){let t=new Uint8Array(32);return crypto.getRandomValues(t),Array.from(t,e=>e.toString(16).padStart(2,"0")).join("")}getApiKey(){return this.config.apiKey}getPartyId(){return this.config.partyId}};var P=class extends y{constructor(e,r=!1){super();this.websocketUrl=e;this.ws=null;this.isConnecting=!1;this.messageQueue=[];this.MAX_QUEUE_SIZE=100;this.connectionParams=null;this.ownPartyId=null;this.cryptoKey=null;this.isEncrypting=!1;this.IV_LENGTH=12;this.debug=r}async connect(e,r,o){if(!(this.isConnecting||this.ws?.readyState===WebSocket.OPEN)){this.isConnecting=!0,this.connectionParams={groupId:e,protocol:r,apiKey:o};try{let n=`${this.websocketUrl}/ws/${e}/${r}?token=${encodeURIComponent(o)}`;this.ws=new WebSocket(n);let i=setTimeout(()=>{if(this.ws)throw this.ws.close(),this.isConnecting=!1,new Error("Connection timeout after 10 seconds")},1e4);this.ws.onopen=()=>{clearTimeout(i),this.isConnecting=!1,this.debug&&console.log(`[WebSocket] \u{1F50C} Connected to ${n}`),this.emit("connected"),this.flushMessageQueue()},this.ws.onmessage=c=>{try{if(typeof c.data=="string"){let g=JSON.parse(c.data);this.handleParsedMessage(g).catch(h=>{console.error("Failed to handle message:",h)})}else console.error("Unsupported message data type:",typeof c.data)}catch(g){console.error("Failed to parse WebSocket message:",g)}},this.ws.onclose=c=>{clearTimeout(i),this.isConnecting=!1,this.emit("disconnected")},this.ws.onerror=c=>{clearTimeout(i),this.isConnecting=!1,this.emit("error",c)}}catch(n){throw this.isConnecting=!1,new Error(`Failed to connect to WebSocket: ${n}`)}}}async sendMessage(e){let r={...e};if(this.shouldEncryptMessage(r))try{r.content=await this.encryptContent(r.content)}catch(o){throw console.error("[WebSocket] Failed to encrypt message:",o),o}if(this.ws?.readyState===WebSocket.OPEN){let o=JSON.stringify(r);this.ws.send(o)}else this.messageQueue.length>=this.MAX_QUEUE_SIZE&&(this.debug&&console.warn(`[WebSocket] Queue full (${this.MAX_QUEUE_SIZE}), dropping oldest message`),this.messageQueue.shift()),this.messageQueue.push(r)}async disconnect(){this.ws&&(this.ws.onopen=null,this.ws.onmessage=null,this.ws.onclose=null,this.ws.onerror=null,this.ws.close(1e3,"Normal closure"),this.ws=null),this.isConnecting=!1,this.connectionParams=null,this.messageQueue=[]}setOwnPartyId(e){this.ownPartyId=e,this.debug&&console.log(`[WebSocket] \u{1F194} Set own party ID: ${e}`)}isConnected(){return this.ws?.readyState===WebSocket.OPEN}async setEncryptionKey(e){let r;if(typeof e=="string"?r=Uint8Array.from(atob(e),o=>o.charCodeAt(0)):r=e,r.byteLength!==32)throw new Error("Encryption key must be 32 bytes for AES-256-GCM");this.cryptoKey=await crypto.subtle.importKey("raw",r,{name:"AES-GCM"},!1,["encrypt","decrypt"]),this.debug&&console.log("[WebSocket] \u{1F510} Encryption key set")}shouldEncryptMessage(e){let r="00000000000000000000000000000000000000000000000000000000000000000000";return e.content==="DONE"&&e.to_id===r?!1:this.cryptoKey!==null&&e.from_id!==r}async encryptContent(e){if(!this.cryptoKey)throw new Error("No encryption key set");if(this.isEncrypting)throw new Error("Recursive encryption detected");this.isEncrypting=!0;try{let r=(globalThis.crypto||crypto).getRandomValues(new Uint8Array(this.IV_LENGTH)),o=new TextEncoder().encode(e),n=await crypto.subtle.encrypt({name:"AES-GCM",iv:r},this.cryptoKey,o),i=new Uint8Array(r.length+n.byteLength);return i.set(r,0),i.set(new Uint8Array(n),r.length),this.toBase64(i)}catch(r){throw console.error("[Encryption] Failed:",r),r}finally{this.isEncrypting=!1}}async decryptContent(e){if(!this.cryptoKey)throw new Error("No encryption key set");try{let r=this.fromBase64(e),o=r.subarray(0,this.IV_LENGTH),n=r.subarray(this.IV_LENGTH),i=await crypto.subtle.decrypt({name:"AES-GCM",iv:o},this.cryptoKey,n);return new TextDecoder().decode(i)}catch(r){throw console.error("[Decryption] Failed:",r),new Error(`Decryption failed: ${r}`)}}toBase64(e){let r="";for(let n=0;n<e.length;n+=32768)r+=String.fromCharCode(...e.subarray(n,n+32768));return btoa(r)}fromBase64(e){let r=atob(e),o=new Uint8Array(r.length);for(let n=0;n<r.length;n++)o[n]=r.charCodeAt(n);return o}flushMessageQueue(){for(;this.messageQueue.length>0;){let e=this.messageQueue.shift();this.ws?.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify(e))}}async handleParsedMessage(e){let r;if(e.type==="message"?r=e.message:r=e,!this.validateProtocolMessage(r)){console.error("Invalid ProtocolMessage received:",r);return}if(this.ownPartyId&&r.from_id===this.ownPartyId){this.debug&&console.log(`[WebSocket] \u{1F504} Ignoring own message from ${this.ownPartyId} (loop prevention)`);return}if(r.content.startsWith("END:")&&console.log(`[WebSocket] [${this.ownPartyId?.substring(0,8)||"unknown"}] \u{1F4E8} Received END message: ${r.content}`),this.shouldEncryptMessage(r))try{r.content=await this.decryptContent(r.content)}catch(o){console.error("[WebSocket] Failed to decrypt message:",o);return}this.emit("message",r)}validateProtocolMessage(e){return typeof e=="object"&&e!==null&&typeof e.group_id=="string"&&typeof e.from_id=="string"&&typeof e.to_id=="string"&&typeof e.content=="string"&&typeof e.round=="number"&&typeof e.timestamp=="string"}};var O=class{constructor(t="defishard_"){this.prefix=t}async save(t,e){if(typeof localStorage>"u")throw new Error("localStorage is not available");if(!t||typeof t!="string")throw new Error("Invalid key: must be a non-empty string");if(typeof e!="string")throw new Error("Invalid data: must be a string");try{let r=await this.deriveEncryptionKey(t),o=crypto.getRandomValues(new Uint8Array(12)),n=await crypto.subtle.encrypt({name:"AES-GCM",iv:o},r,new TextEncoder().encode(e)),i=this.getFullKey(t),c=this.getFullKey(`${t}_iv`);localStorage.setItem(i,this.arrayBufferToBase64(n)),localStorage.setItem(c,this.arrayBufferToBase64(o.buffer))}catch(r){throw new Error(`Failed to save to localStorage: ${r}`)}}async get(t){if(typeof localStorage>"u")return null;if(!t||typeof t!="string")throw new Error("Invalid key: must be a non-empty string");try{let e=this.getFullKey(t),r=this.getFullKey(`${t}_iv`),o=localStorage.getItem(e),n=localStorage.getItem(r);if(!o||!n)return null;let i=await this.deriveEncryptionKey(t),c=await crypto.subtle.decrypt({name:"AES-GCM",iv:this.base64ToArrayBuffer(n)},i,this.base64ToArrayBuffer(o));return new TextDecoder().decode(c)}catch(e){return console.warn(`Failed to get from localStorage: ${e}`),null}}async remove(t){if(!(typeof localStorage>"u")){if(!t||typeof t!="string")throw new Error("Invalid key: must be a non-empty string");try{let e=this.getFullKey(t),r=this.getFullKey(`${t}_iv`);localStorage.removeItem(e),localStorage.removeItem(r)}catch(e){console.warn(`Failed to remove from localStorage: ${e}`)}}}async isAvailable(){try{return typeof localStorage<"u"}catch{return!1}}async clear(){if(!(typeof localStorage>"u"))try{let t=[];for(let e=0;e<localStorage.length;e++){let r=localStorage.key(e);r&&r.startsWith(this.prefix)&&t.push(r)}for(let e of t)localStorage.removeItem(e)}catch(t){console.warn(`Failed to clear localStorage: ${t}`)}}async getKeys(){if(typeof localStorage>"u")return[];try{let t=[];for(let e=0;e<localStorage.length;e++){let r=localStorage.key(e);r&&r.startsWith(this.prefix)&&!r.endsWith("_iv")&&t.push(r.substring(this.prefix.length))}return t}catch(t){return console.warn(`Failed to get keys from localStorage: ${t}`),[]}}getFullKey(t){return`${this.prefix}${t}`}async deriveEncryptionKey(t){let e=`${t}_defishard_salt`,r=new TextEncoder().encode(e),o=await crypto.subtle.importKey("raw",r,{name:"PBKDF2"},!1,["deriveKey"]),n=new TextEncoder().encode("defishard-localstorage-salt");return await crypto.subtle.deriveKey({name:"PBKDF2",salt:n,iterations:1e5,hash:"SHA-256"},o,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}arrayBufferToBase64(t){let e=new Uint8Array(t),r="";for(let o=0;o<e.byteLength;o++)r+=String.fromCharCode(e[o]);return btoa(r)}base64ToArrayBuffer(t){let e=atob(t),r=new Uint8Array(e.length);for(let o=0;o<e.length;o++)r[o]=e.charCodeAt(o);return r.buffer}};T();var v=class extends y{constructor(e){super();this.currentRound=0;this.isComplete=!1;this.roundStates=new Map;this.receivedMessageHashes=new Set;this.config=e,this.debug=e.debug??!1}async processMessage(e){if(this.isComplete)throw new Error("Processor already complete");try{if(e.round===0&&(e.content==="start"||e.content==="START"))return await this.startRound(0);if(e.content.startsWith("END:")&&e.from_id==="00000000000000000000000000000000000000000000000000000000000000000000")return this.currentRound>=0?[]:[];if(e.content==="end")return this.currentRound>=0?[]:[];if(this.currentRound===-1)return[];if(e.round===0)return[];if(e.from_id===this.config.partyId)return[];let r=this.hashMessage(e);if(this.receivedMessageHashes.has(r))return[];this.receivedMessageHashes.add(r);let o=e.round;this.roundStates.has(o)||this.roundStates.set(o,{messages:[],processed:!1,emitted:!1}),this.roundStates.get(o).messages.push(e);let n=this.roundStates.get(o);if(n&&!n.processed){let i=this.getExpectedMessageCount(o);if(n.messages.length>=i){n.processed=!0;try{return await this.processRound(o,n.messages)}catch(c){throw n.processed=!1,c}}}return[]}catch(r){throw this.emit("error",new Error(`Failed to process message: ${r}`)),r}}async startRound(e){return this.currentRound=e,this.roundStates.set(e,{messages:[],processed:!1,emitted:!1}),e===0?await this.handleStartRound():[]}filterMessages(e){return e.filter(r=>r.from_id!==this.config.partyId)}selectMessages(e){return e.filter(r=>r.from_id!==this.config.partyId&&(r.to_id===this.config.partyId||r.to_id==="0"))}convertToProtocolMessage(e,r){let o;if(e.to_id===void 0)o="0";else{if(e.to_id>=this.config.groupInfo.members.length)throw new Error(`Invalid message from WASM: to_id index ${e.to_id} is out of bounds for group with ${this.config.groupInfo.members.length} members.`);o=this.config.groupInfo.members[e.to_id].partyId}return{group_id:this.config.groupId,from_id:this.config.partyId,to_id:o,content:this.bytesToBase64(e.payload),round:r,timestamp:new Date().toISOString()}}convertToWasmMessage(e){let r=this.base64ToBytes(e.content),o=this.config.groupInfo.members.findIndex(i=>i.partyId===e.from_id),n=e.to_id==="0"?void 0:this.config.groupInfo.members.findIndex(i=>i.partyId===e.to_id);if(o===-1)throw new Error(`Invalid from_id in protocol message: ${e.from_id}`);return new(this.getWasmMessageClass())(new Uint8Array(r),o,n!==-1?n:void 0)}hashMessage(e){let r=0,o=`${e.from_id}:${e.to_id}:${e.round}:${e.content}`;for(let n=0;n<o.length;n++){let i=o.charCodeAt(n);r=(r<<5)-r+i,r=r&r}return r}bytesToBase64(e){return btoa(String.fromCharCode(...e))}base64ToBytes(e){let r=atob(e);return new Uint8Array(r.split("").map(o=>o.charCodeAt(0)))}hexToBytes(e){return new Uint8Array(e.match(/.{1,2}/g).map(r=>parseInt(r,16)))}getCurrentRound(){return this.currentRound}isProcessComplete(){return this.isComplete}destroy(){this.debug&&console.log(`[${this.getProcessorName()}] \u{1F9F9} Cleaning up ${this.getProcessName()} processor`),this.roundStates.clear(),this.receivedMessageHashes.clear(),this.removeAllListeners()}};var C=class extends v{constructor(e,r=!1){super(e);this.session=null;this.storage=null;this.generatedKeyshare=null;this.isKeyRotation=!1;this.keygenConfig=e,this.storage=e.storage||null,this.isKeyRotation=r}async initialize(e){try{e?this.session=W.initKeyRotation(e,void 0,this.keygenConfig.distributed):this.session=new W(this.config.groupInfo.totalParties,this.config.groupInfo.threshold,this.config.partyIndex,this.hexToBytes(this.config.groupId),void 0,this.keygenConfig.distributed),this.currentRound=-1}catch(r){throw this.emit("error",new Error(`Failed to initialize ${e?"key rotation":"keygen"}: ${r}`)),r}}async handleStartRound(){if(!this.session)throw new Error("Session not initialized");try{let e=this.session.createFirstMessage(),r=this.convertToProtocolMessage(e,1);this.currentRound=1,this.roundStates.set(1,{messages:[],processed:!1,emitted:!1});let o=this.roundStates.get(0);return o.emitted||(o.emitted=!0,this.emit("round-complete",0,[r])),[r]}catch(e){throw e}}async processRound(e,r){if(!this.session)throw new Error("Session not initialized");let o=this.roundStates.get(e);try{if(e===5)return o.processed=!0,[];let n=!(e===1||e===4),i=this.filterMessagesForWasm(r,n);this.debug;let c=i.map(l=>this.convertToWasmMessage(l)),g;try{g=this.session.handleMessages(c)}catch(l){let d=`WASM processing failed in round ${e}: ${l}`;throw this.emit("error",new Error(d)),l}this.debug;let h=g.map(l=>this.convertToProtocolMessage(l,e+1));if(e===4)try{let l=this.session.keyshare();this.saveKeyshare(l).catch(A=>{this.emit("error",new Error(`Failed to save keyshare: ${A}`))}),this.generatedKeyshare=l;let d={group_id:this.config.groupId,from_id:this.config.partyId,to_id:"00000000000000000000000000000000000000000000000000000000000000000000",content:"DONE",round:5,timestamp:new Date().toISOString()};return o.emitted||(o.emitted=!0,this.emit("round-complete",e,[d])),o.processed=!0,[d]}catch(l){let d=`Failed to complete keygen in round ${e}: ${l}`;throw this.emit("error",new Error(d)),l}return this.currentRound=e+1,this.roundStates.set(this.currentRound,{messages:[],processed:!1,emitted:!1}),o.emitted||(o.emitted=!0,this.emit("round-complete",e,h)),o.processed=!0,h}catch(n){let i=`Failed to process round ${e}: ${n}`;throw this.emit("error",new Error(i)),n}}filterMessagesForWasm(e,r){return e.filter(o=>this.config.groupInfo.members.findIndex(i=>i.partyId===o.from_id)===this.config.partyIndex?!1:r?(o.to_id==="0"?void 0:this.config.groupInfo.members.findIndex(c=>c.partyId===o.to_id))===this.config.partyIndex||o.to_id==="0":!0)}getExpectedMessageCount(e){let r=this.config.groupInfo.totalParties;switch(e){case 1:case 2:case 3:case 4:return r-1;default:return 0}}getProcessorName(){return"KeygenProcessor"}getProcessName(){return"keygen"}getWasmMessageClass(){return _}isKeygenComplete(){return this.isComplete}async saveKeyshare(e){try{if(this.debug&&console.log("[KeygenProcessor] \u{1F4BE} Attempting to save keyshare..."),!this.storage){this.debug&&console.log("[KeygenProcessor] \u26A0\uFE0F No storage implementation provided, skipping keyshare save");return}let r={serialized:Array.from(e.toBytes()),publicKey:Array.from(e.publicKey).map(n=>n.toString(16).padStart(2,"0")).join(""),participants:e.participants,threshold:e.threshold,partyId:this.config.partyId,partyIndex:this.config.partyIndex,groupId:this.config.groupId,totalParties:this.config.groupInfo.totalParties,timestamp:new Date().toISOString(),apiKey:this.config.apiKey},o=`keyshare_${this.config.groupId}_${this.config.partyIndex}`;this.isKeyRotation?await this.handleKeyRotationBackup(o,r):await this.storage.save(o,JSON.stringify(r))}catch(r){throw console.error(`[KeygenProcessor] \u274C Failed to save keyshare: ${r}`),r}}async handleKeyRotationBackup(e,r){try{if(!this.storage)throw new Error("Storage not available for key rotation backup");let o=`${e}.bak`,n=await this.storage.get(e);if(n){try{await this.storage.get(o)&&await this.storage.remove(o)}catch{}await this.storage.save(o,n)}await this.storage.save(e,JSON.stringify(r))}catch(o){throw o}}getSession(){return this.session}async processMessage(e){if(e.content.startsWith("END:")&&e.from_id==="00000000000000000000000000000000000000000000000000000000000000000000")if(this.currentRound>=0){let r=e.content.split(":")[1];return this.isComplete=!0,this.generatedKeyshare&&(this.emit("keygen-complete",this.generatedKeyshare),this.generatedKeyshare=null),r!=="SUCCESS"&&this.emit("error",new Error(`Keygen process ended with status: ${r}`)),[]}else return[];return super.processMessage(e)}destroy(){this.session=null,super.destroy()}};T();var U=class extends v{constructor(e){super(e);this.session=null;this.partialSignature=null;this.finalSignature=null;this.signConfig=e}async initialize(){try{this.session=new j(this.signConfig.keyShare,this.signConfig.derivationPath||"m",void 0),this.currentRound=-1}catch(e){throw this.emit("error",new Error(`Failed to initialize signing: ${e}`)),e}}async handleStartRound(){if(!this.session)throw new Error("Session not initialized");try{let e=this.session.createFirstMessage(this.signConfig.messageHash),r=this.convertToProtocolMessage(e,1);this.currentRound=1,this.roundStates.set(1,{messages:[],processed:!1,emitted:!1});let o=this.roundStates.get(0);return o.emitted||(o.emitted=!0,this.emit("round-complete",0,[r])),[r]}catch(e){throw e}}async processRound(e,r){if(!this.session)throw new Error("Session not initialized");let o=this.roundStates.get(e);try{let n=!(e===1||e===4),i=this.filterMessagesForWasm(r,n),c=i.map(l=>this.convertToWasmMessage(l)),g=[];if(e!==4)try{g=this.session.handleMessages(c)}catch(l){let d=`WASM processing failed in round ${e}: ${l}`;throw this.emit("error",new Error(d)),l}let h=g.map(l=>this.convertToProtocolMessage(l,e+1));if(e===3)try{let l=this.session.lastMessage(this.signConfig.messageHash);this.partialSignature=l;let d=this.convertToProtocolMessage(l,e+1);return this.currentRound=e+1,this.roundStates.set(this.currentRound,{messages:[],processed:!1,emitted:!1}),o.emitted||(o.emitted=!0,this.emit("round-complete",e,[d])),o.processed=!0,[d]}catch(l){throw this.debug&&console.error("[SignProcessor] \u274C Round 3: Error creating partial signature:",l),new Error(`Failed to create partial signature in round 3: ${l}`)}if(e===4)try{if(!this.partialSignature)throw new Error("Partial signature from round 3 not found");let l=i.map(Y=>this.convertToWasmMessage(Y)),d=this.session.combine(l);this.finalSignature=d;let A={group_id:this.config.groupId,from_id:this.config.partyId,to_id:"00000000000000000000000000000000000000000000000000000000000000000000",content:"DONE",round:5,timestamp:new Date().toISOString()};return o.emitted||(o.emitted=!0,this.emit("round-complete",e,[A])),o.processed=!0,this.currentRound=4,[A]}catch(l){let d=`Failed to complete signing in round ${e}: ${l}`;throw this.emit("error",new Error(d)),l}return e===5?(o.processed=!0,[]):(this.currentRound=e+1,this.roundStates.set(this.currentRound,{messages:[],processed:!1,emitted:!1}),o.emitted||(o.emitted=!0,this.emit("round-complete",e,h)),o.processed=!0,h)}catch(n){let i=`Failed to process round ${e}: ${n}`;throw this.emit("error",new Error(i)),n}}filterMessagesForWasm(e,r){return e.filter(o=>this.config.groupInfo.members.findIndex(i=>i.partyId===o.from_id)===this.config.partyIndex?!1:r?(o.to_id==="0"?void 0:this.config.groupInfo.members.findIndex(c=>c.partyId===o.to_id))===this.config.partyIndex||o.to_id==="0":!0)}getExpectedMessageCount(e){let r=this.config.groupInfo.threshold;switch(e){case 1:case 2:case 3:case 4:return r-1;case 5:return 0;default:return 0}}getProcessorName(){return"SignProcessor"}getProcessName(){return"signing"}getWasmMessageClass(){return _}isSigningComplete(){return this.isComplete}isActive(){return!this.isComplete}getSession(){return this.session}async processMessage(e){if(e.content.startsWith("END:")&&e.from_id==="00000000000000000000000000000000000000000000000000000000000000000000")if(this.currentRound>=0){let r=e.content.split(":")[1];return this.isComplete=!0,this.finalSignature&&(this.emit("signing-complete",this.finalSignature),this.finalSignature=null),r!=="SUCCESS"&&this.emit("error",new Error(`Signing process ended with status: ${r}`)),[]}else return[];return super.processMessage(e)}destroy(){this.partialSignature=null,this.session=null,super.destroy()}};var Z=class Z extends y{constructor(e,r,o=!1,n){super();this.keygenProcessor=null;this.signProcessor=null;this.outgoingQueue=[];this.processingOutgoing=!1;this.processedMessageIds=new Set;this.instanceId=++Z.instanceCounter,this.config=e,this.storage=r,this.debug=o,this.apiClient=new S(e.relayerUrl),this.websocketManager=n||new P(e.websocketUrl||"ws://localhost:3000",o),n||(this.websocketManager.on("message",i=>{this.handleMessage(i).catch(c=>{this.emit("error",c instanceof Error?c:new Error(String(c)))})}),this.websocketManager.on("error",i=>{this.emit("error",i instanceof Error?i:new Error(String(i)))}))}async validateAndGetGroupInfo(e){if(!this.config.groupId)throw new Error("No group ID available. Please create or join a group first.");if(!this.config.apiKey)throw new Error(`API key required for ${e}`);let r=await this.apiClient.getGroupInfo(this.config.groupId),o=r.members.findIndex(n=>n.partyId===this.config.partyId);if(o===-1)throw new Error("Party not found in group members");return{groupInfo:r,partyIndex:o}}handleRoundComplete(e,r){this.debug&&console.log(`[ProtocolManager#${this.instanceId}] [${this.config.partyId?.substring(0,8)}] \u{1F3AF} round-complete event received: Round ${e}, ${r.length} messages`);for(let o of r)this.queueOutgoingMessage(o);this.processOutgoingQueue()}handleProcessorError(e,r){r==="keygen"&&this.keygenProcessor?(this.keygenProcessor.destroy(),this.keygenProcessor=null):r==="sign"&&this.signProcessor&&(this.signProcessor.destroy(),this.signProcessor=null),this.emit("error",e)}async handleProcessorComplete(e,r,o){this.debug&&console.log(`[ProtocolManager] [${this.config.partyId?.substring(0,8)}] \u{1F389} ${o} completed`);try{await this.websocketManager.disconnect()}catch(n){this.debug&&console.warn("[ProtocolManager] Error during disconnect:",n)}o==="keygen"?this.keygenProcessor=null:this.signProcessor=null,this.emit(r,e)}setupProcessorEventHandlers(e,r){e.on("round-complete",this.handleRoundComplete.bind(this)),e.on("error",o=>this.handleProcessorError(o,r)),r==="keygen"?e.on("keygen-complete",o=>this.handleProcessorComplete(o,"keygen-complete","keygen")):e.on("signing-complete",o=>this.handleProcessorComplete(o,"sign-complete","sign"))}updateConfig(e){this.config=e,this.apiClient.updateConfig(e)}async startKeygen(e=!0,r){try{let{groupInfo:o,partyIndex:n}=await this.validateAndGetGroupInfo("keygen");this.keygenProcessor=new C({groupInfo:o,partyId:this.config.partyId,partyIndex:n,groupId:this.config.groupId,distributed:e,secret:r,debug:this.debug,storage:this.storage,apiKey:this.config.apiKey}),this.setupProcessorEventHandlers(this.keygenProcessor,"keygen"),await this.websocketManager.connect(this.config.groupId,"keygen",this.config.apiKey),await this.keygenProcessor.initialize()}catch(o){throw this.emit("error",new Error(`Failed to start keygen: ${o}`)),o}}async startKeyRotation(e,r=!0,o){try{let{groupInfo:n,partyIndex:i}=await this.validateAndGetGroupInfo("key rotation");this.debug&&console.log(`[ProtocolManager] \u{1F504} Using keyshare data for rotation: partyIndex=${i}, totalParties=${n.totalParties}`),this.keygenProcessor=new C({groupInfo:n,partyId:this.config.partyId,partyIndex:i,groupId:this.config.groupId,distributed:r,secret:o,debug:this.debug,storage:this.storage,apiKey:this.config.apiKey},!0),this.setupProcessorEventHandlers(this.keygenProcessor,"keygen"),await this.websocketManager.connect(this.config.groupId,"keygen",this.config.apiKey);let c=null;try{if(e&&typeof e.toBytes=="function")c=e;else if(e&&Array.isArray(e.serialized)){let{Keyshare:g}=await Promise.resolve().then(()=>(T(),V));c=g.fromBytes(new Uint8Array(e.serialized))}else throw new Error("Invalid keyshare format: expected WASM Keyshare or KeyShare JSON with serialized bytes")}catch(g){throw this.emit("error",new Error(`Failed to prepare keyshare for rotation: ${g}`)),g}await this.keygenProcessor.initialize(c)}catch(n){throw this.emit("error",new Error(`Failed to start key rotation: ${n}`)),n}}async startSigningWithKeyshare(e,r){return this.startSigning(e,r)}async startSigning(e,r){try{if(e.length!==32)throw new Error("Message hash must be 32 bytes");let{groupInfo:o,partyIndex:n}=await this.validateAndGetGroupInfo("signing");this.keygenProcessor&&(this.keygenProcessor.destroy(),this.keygenProcessor=null),console.log(`\u{1F4CB} Using provided keyshare for party index ${n} in group ${r.groupId}`);let{Keyshare:i}=await Promise.resolve().then(()=>(T(),V)),c=i.fromBytes(new Uint8Array(r.serialized));this.signProcessor=new U({groupInfo:o,partyId:this.config.partyId,partyIndex:n,groupId:this.config.groupId,keyShare:c,messageHash:e,debug:this.debug}),this.setupProcessorEventHandlers(this.signProcessor,"sign"),await this.websocketManager.connect(this.config.groupId,"sign",this.config.apiKey),await this.signProcessor.initialize()}catch(o){throw this.emit("error",new Error(`Failed to start signing: ${o}`)),o}}async handleMessage(e){try{if(e.content.startsWith("END:")&&console.log(`[ProtocolManager] [${this.config.partyId?.substring(0,8)||"unknown"}] \u{1F4E8} Processing END message: ${e.content}`),!this.websocketManager.isConnected()&&this.config.groupId&&this.config.apiKey){let r=this.keygenProcessor?"keygen":"sign";await this.websocketManager.connect(this.config.groupId,r,this.config.apiKey)}this.keygenProcessor&&!this.keygenProcessor.isKeygenComplete()?await this.keygenProcessor.processMessage(e):this.signProcessor&&this.signProcessor.isActive()?e.round<=5&&await this.signProcessor.processMessage(e):this.debug&&console.log("[ProtocolManager] No active processor to handle message, ignoring"),this.processOutgoingQueue()}catch(r){throw this.emit("error",new Error(`Failed to handle message: ${r}`)),r}}hashContent(e){let r=0;for(let o=0;o<e.length;o++){let n=e.charCodeAt(o);r=(r<<5)-r+n,r=r&r}return Math.abs(r).toString(36)}queueOutgoingMessage(e){let r=`${e.round}_${e.from_id}_${this.hashContent(e.content)}`;if(this.outgoingQueue.some(n=>`${n.round}_${n.from_id}_${this.hashContent(n.content)}`===r)){this.debug&&console.log(`[ProtocolManager#${this.instanceId}] [${this.config.partyId?.substring(0,8)}] \u{1F6AB} Skipping duplicate message: Round ${e.round}`);return}this.debug&&console.log(`[ProtocolManager#${this.instanceId}] [${this.config.partyId?.substring(0,8)}] \u{1F4E4} Queueing message: Round ${e.round}, Content: ${e.content.substring(0,20)}...`),this.outgoingQueue.push(e)}processOutgoingQueue(){this.processingOutgoing||this.outgoingQueue.length===0||(this.processingOutgoing=!0,setTimeout(async()=>{try{for(;this.outgoingQueue.length>0;){let e=this.outgoingQueue.shift();if(!e.group_id||!e.from_id||!e.content){this.debug&&console.warn("[ProtocolManager] Skipping invalid message:",e);continue}let r=`${e.round}_${e.from_id}_${this.hashContent(e.content)}`;if(this.processedMessageIds.has(r)){this.debug&&console.log(`[ProtocolManager] [${this.config.partyId?.substring(0,8)}] \u{1F6AB} Skipping already processed message: Round ${e.round}`);continue}this.processedMessageIds.add(r),await this.websocketManager.sendMessage(e),await new Promise(o=>setTimeout(o,10))}}catch(e){console.error("[ProtocolManager] Error processing outgoing queue:",e),this.emit("error",e)}finally{this.processingOutgoing=!1}},0))}getKeygenState(){return this.keygenProcessor?{round:this.keygenProcessor.getCurrentRound(),isComplete:this.keygenProcessor.isKeygenComplete()}:null}getSignState(){return this.signProcessor?{round:this.signProcessor.getCurrentRound(),isComplete:this.signProcessor.isSigningComplete()}:null}destroy(){this.keygenProcessor&&(this.keygenProcessor.destroy(),this.keygenProcessor=null),this.signProcessor&&(this.signProcessor.destroy(),this.signProcessor=null),this.outgoingQueue=[],this.processingOutgoing=!1,this.processedMessageIds.clear(),this.websocketManager.disconnect().catch(e=>{this.debug&&console.warn("[ProtocolManager] Error during WebSocket disconnect:",e)})}};Z.instanceCounter=0;var X=Z;var w=class extends y{constructor(e){super();this.wasmInitialized=!1;this.config=e,this.debug=e.debug??!1,this.apiClient=new S(e.relayerUrl),this.websocketManager=new P(e.websocketUrl,this.debug),this.storage=e.storage||new O("defishard_"),this.protocolManager=new X(this.config,this.storage,this.debug,this.websocketManager),this.websocketManager.on("message",r=>{this.handleWebSocketMessage(r).catch(o=>{this.emit("error",o)})}),this.websocketManager.on("connected",()=>{this.debug&&console.log(`[SDK] \u{1F50C} WebSocket connected for party ${this.config.partyId}`),this.emit("connected")}),this.websocketManager.on("disconnected",()=>{this.debug&&console.log(`[SDK] \u{1F50C} WebSocket disconnected for party ${this.config.partyId}`),this.emit("disconnected")}),this.websocketManager.on("error",r=>{this.debug&&console.log(`[SDK] \u274C WebSocket error for party ${this.config.partyId}:`,r),this.emit("error",r)}),this.protocolManager.on("keygen-complete",r=>{this.emit("keygen-complete",r)}),this.protocolManager.on("sign-complete",r=>{this.emit("sign-complete",r)}),this.protocolManager.on("error",r=>{this.emit("error",r)})}async initialize(){try{if(this.wasmInitialized)return;let{default:e}=await Promise.resolve().then(()=>(T(),V));await e(),this.wasmInitialized=!0}catch(e){throw this.emit("error",new Error(`Failed to initialize SDK: ${e}`)),e}}async register(){try{let e=await this.apiClient.register();return e.success&&(this.config.partyId=e.partyId,this.config.apiKey=e.token,this.apiClient.updateConfig(this.config),this.protocolManager.updateConfig(this.config),this.websocketManager.setOwnPartyId(e.partyId),this.debug&&console.log(`[SDK] \u2705 Registered party ${e.partyId}`)),e}catch(e){throw this.emit("error",new Error(`Failed to register: ${e}`)),e}}async createGroup(e,r,o=60){try{let n=await this.apiClient.createGroup(e,r,o);return n.success&&(this.config.groupId=n.group.groupId,this.debug&&console.log(`[SDK] \u2705 Created group ${n.group.groupId}`)),n}catch(n){throw this.emit("error",new Error(`Failed to create group: ${n}`)),n}}async joinGroup(e){try{let r=await this.apiClient.joinGroup(e);return r.success&&(this.config.groupId=r.group.groupId,this.debug&&console.log(`[SDK] \u2705 Joined group ${r.group.groupId}`)),r}catch(r){throw this.emit("error",new Error(`Failed to join group: ${r}`)),r}}async startKeygen(e=!0,r){try{await this.protocolManager.startKeygen(e,r)}catch(o){throw this.emit("error",new Error(`Failed to start keygen: ${o}`)),o}}async startKeyRotation(e,r=!0,o){try{await this.protocolManager.startKeyRotation(e,r,o)}catch(n){throw this.emit("error",new Error(`Failed to start key rotation: ${n}`)),n}}async startSigning(e,r){try{await this.protocolManager.startSigning(e,r)}catch(o){throw this.emit("error",new Error(`Failed to start signing: ${o}`)),o}}async startSigningWithKeyshare(e,r,o){try{let n=`keyshare_${r}_${o}`,i=await this.storage.get(n);if(!i)throw new Error(`No keyshare found at ${n}`);let c=JSON.parse(i);console.log(`\u{1F4CB} Loaded keyshare from ${n}: Party ${c.partyId}`),await this.protocolManager.startSigningWithKeyshare(e,c)}catch(n){throw this.emit("error",new Error(`Failed to start signing: ${n}`)),n}}async handleWebSocketMessage(e){try{await this.protocolManager.handleMessage(e)}catch(r){throw this.emit("error",new Error(`Failed to handle WebSocket message: ${r}`)),r}}getKeygenState(){return this.protocolManager.getKeygenState()}getSignState(){return this.protocolManager.getSignState()}async isStorageAvailable(){return await this.storage.isAvailable()}getStorage(){return this.storage}async setEncryptionKey(e){await this.websocketManager.setEncryptionKey(e)}async disconnect(){await this.websocketManager.disconnect(),this.protocolManager.destroy()}};G();ae();ce();ge();function be(s){if(typeof navigator<"u"&&navigator.product==="ReactNative"){let{MobileStorageAdapter:t}=(ge(),z(we));return new t(s)}if(typeof chrome<"u"&&chrome.storage&&chrome.storage.local){let{ExtensionStorageAdapter:t}=(ce(),z(_e));return new t(s)}if(typeof localStorage<"u"){let{WebStorageAdapter:t}=(ae(),z(me));return new t(s)}throw new Error("No suitable storage adapter found for this environment")}function Se(s){let t=s.storage||new I(s.storagePrefix);return new w({...s,storage:t,platform:"web"})}function Pe(s){let t=s.storage||new M(s.storagePrefix);return new w({...s,storage:t,platform:"extension"})}function ve(s){let t=s.storage||new E(s.storagePrefix);return new w({...s,storage:t,platform:"mobile"})}return z(Ue);})();
